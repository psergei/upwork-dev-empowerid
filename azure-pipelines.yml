# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'de8afa9a-635c-44bf-8190-062304aa4b1c'
  imageRepository: 'psergeiupworkdevempowerid'
  containerRegistry: 'prognimakdevaksregistry.azurecr.io'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'prognimakdevaksregistry18780917-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an Website image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)-website
        dockerfile: demo/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push a Gateway image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)-gateway
        dockerfile: Gateway/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.Repository.LocalPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push a PostsService image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)-posts-service
        dockerfile: PostsService/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.Repository.LocalPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push a CommentsService image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)-comments-service
        dockerfile: CommentsService/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.Repository.LocalPath)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

